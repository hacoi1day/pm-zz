version: '3'

networks:
  app_network:
    name: app_network

services: 
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_${APP_NAME}
    ports: 
      - 80:80
    volumes: 
      - ./:/var/www/html:cached
      - ./nginx/conf.d:/etc/nginx/conf.d:cached
    depends_on:
      - backend
      - frontend
      - mysql
    networks:
      - app_network

  mysql:
    image: mysql:5.7.33
    container_name: mysql_${APP_NAME}
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    tty: true
    ports: 
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123456aa
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d:cached
    networks: 
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_${APP_NAME}
    depends_on:
      - mysql
    restart: always
    ports:
      - "8001:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: 123456aa
    depends_on:
      - mysql
    networks: 
      - app_network

  backend:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        user: havt
        uid: 1000
    image: pm_backend
    container_name: php_${APP_NAME}
    volumes: 
      - ./backend:/var/www/html/backend:cached
    ports: 
      - 9000:9000
    networks: 
      - app_network
    environment:
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9000 remote_enable=1

  frontend:
    build:
      context: .
      dockerfile: node.dockerfile
    container_name: node_${APP_NAME}
    volumes: 
      - ./frontend:/var/www/html/frontend:cached
    command: yarn serve
    ports:
      - 8080:8080
    environment:
      NODE_ENV: development
    networks: 
      - app_network