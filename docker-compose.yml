version: '3'

networks:
    app-network:
        # name: app-network

services: 
    nginx:
        image: nginx:stable-alpine
        container_name: nginx_${APP_NAME}
        ports: 
            - 80:80
        volumes: 
            - ./:/var/www/html
            - ./nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - backend
            - mysql
        networks:
            - app-network
    mysql:
        image: mysql:5.7.33
        container_name: mysql_${APP_NAME}
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: unless-stopped
        tty: true
        ports: 
            - 3306:3306
        environment: 
            # MYSQL_DATABASE: pm
            # MYSQL_USER: havt
            # MYSQL_PASSWORD: 1234
            MYSQL_ROOT_PASSWORD: 123456aa
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./mysql/init:/docker-entrypoint-initdb.d
        networks: 
            - app-network
    backend:
        build:
            context: .
            dockerfile: php.dockerfile
        container_name: php_${APP_NAME}
        user: ${UID:-1000}:${GID:-1000}
        volumes: 
            - ./backend:/var/www/html/backend
        ports: 
            - 9000:9000
        networks: 
            - app-network

    frontend:
        build:
            context: .
            dockerfile: node.dockerfile
        container_name: node_${APP_NAME}
        volumes: 
            - ./frontend:/var/www/html/frontend
        command: yarn serve
        ports:
            - 8080:8080
        environment:
            NODE_ENV: development
        networks: 
            - app-network